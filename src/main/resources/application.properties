baseUrl=http://localhost:8080

# PostgresSql
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=123456
spring.datasource.driver-class-name=org.postgresql.Driver

# This will create table automatically in your database (update/create)
spring.jpa.hibernate.ddl-auto=update

spring.flyway.baselineOnMigrate=true

# Apache Kafka
spring.kafka.producer.bootstrap-servers=localhost:29092
spring.kafka.consumer.bootstrap-servers=localhost:29092
spring.kafka.consumer.group-id=my-consumer-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# LinkedIn OAuth2
spring.security.oauth2.client.registration.linkedin.client-id=86xfeosqtas5qu
spring.security.oauth2.client.registration.linkedin.client-secret=lGeVodVhSaq0iaD7
spring.security.oauth2.client.registration.linkedin.redirect-uri={baseUrl}/login/oauth2/code/linkedin
spring.security.oauth2.client.registration.linkedin.authorization-grant-type=authorization_code
spring.security.oauth2.client.provider.linkedin.token-uri=https://www.linkedin.com/oauth/v2/accessToken
spring.security.oauth2.client.registration.linkedin.scope=profile, email
spring.security.oauth2.client.provider.linkedin.authorization-uri=https://www.linkedin.com/oauth/v2/authorization
spring.security.oauth2.client.provider.linkedin.user-info-uri=https://api.linkedin.com/v2/me

# GitHub OAuth2
spring.security.oauth2.client.registration.github.client-id=abe05b4b325f95b15e50
spring.security.oauth2.client.registration.github.client-secret=510da63728e78a6eef30965a90014feecde920e3
spring.security.oauth2.client.registration.github.redirect-uri={baseUrl}/login/oauth2/code/github
spring.security.oauth2.client.provider.github.authorization-uri=https://github.com/login/oauth/authorize
spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token

logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.oauth2=DEBUG