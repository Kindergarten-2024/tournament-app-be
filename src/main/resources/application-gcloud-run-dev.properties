baseUrl=https://tournament-app-be-zigpprg2xq-og.a.run.app
frontendUrl=https://tournament-app-fe-zigpprg2xq-oc.a.run.app

# PostgresSql
spring.datasource.url=jdbc:postgresql://34.168.52.103:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=qwerty123qwerty
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.hikari.maximum-pool-size=40
#Qwerty123qwerty!
# H2 Configuration
#spring.h2.console.enabled=true
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=h2database
#spring.datasource.password=123456
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.h2.console.settings.web-allow-others=true

# Common Flyway properties
#flyway.enabled=true

# This will create table automatically in your database (update/create)
spring.jpa.hibernate.ddl-auto=create

# LinkedIn OAuth2
spring.security.oauth2.client.registration.linkedin.client-id=86xfeosqtas5qu
spring.security.oauth2.client.registration.linkedin.client-secret=lGeVodVhSaq0iaD7
spring.security.oauth2.client.registration.linkedin.client-name=Linkedin
spring.security.oauth2.client.registration.linkedin.redirect-uri=https://tournament-app-fe-zigpprg2xq-oc.a.run.app/api/login/oauth2/code/linkedin
spring.security.oauth2.client.registration.linkedin.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.linkedin.client-authentication-method=client_secret_post
spring.security.oauth2.client.provider.linkedin.token-uri=https://www.linkedin.com/oauth/v2/accessToken
spring.security.oauth2.client.registration.linkedin.scope= email, profile, openid
spring.security.oauth2.client.registration.linkedin.provider=linkedin
spring.security.oauth2.client.provider.linkedin.authorization-uri=https://www.linkedin.com/oauth/v2/authorization
spring.security.oauth2.client.provider.linkedin.user-info-uri=https://api.linkedin.com/v2/userinfo
spring.security.oauth2.client.provider.linkedin.user-info-authentication-method=post
spring.security.oauth2.client.provider.linkedin.user-name-attribute= email
spring.security.oauth2.client.provider.linkedin.jwk-set-uri=https://www.linkedin.com/oauth/openid/jwks

# GitHub OAuth2
spring.security.oauth2.client.registration.github.client-secret=3594121852ff99eecf84d4afc3e1d1ef918d0ff1
spring.security.oauth2.client.registration.github.client-id=f068e31d04ad60537ffc
spring.security.oauth2.client.registration.github.redirect-uri=https://tournament-app-fe-zigpprg2xq-oc.a.run.app/api/login/oauth2/code/github
spring.security.oauth2.client.provider.github.authorization-uri=https://github.com/login/oauth/authorize
spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token


server.tomcat.remote-ip-header=x-forwarded-for
server.tomcat.protocol-header=x-forwarded-proto
server.tomcat.use-relative-redirects=true
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.same-site=none
server.use-forward-headers=true
server.forward-headers-strategy=NATIVE
server.tomcat.internal-proxies=.*
server.servlet.context-path=/api

---